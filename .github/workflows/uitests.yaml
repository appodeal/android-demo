name: UITest

on:
  workflow_dispatch:
    inputs:
      device:
        required: true
        default: 'Pixel8_API33'
        type: choice
        options:
          - 'Pixel8_API33'
          - 'Pixel8_API35'
      runner:
        required: true
        default: 'autotestdebug'
        type: choice
        options:
          - 'autotestdebug'
          - 'ubuntu-latest'

jobs:
  build:
    name: build android application for ui tests
    runs-on: ${{ github.event.inputs.runner || 'autotestdebug' }}
    timeout-minutes: 30
    steps:
    - name: Print Env Variables
      run: env
      working-directory: ${{ github.workspace }}

    - name: checkout source code of application
      uses: actions/checkout@v4
      with:
        clean: true
        path: 'appodeal-android-sdk'
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        # settings-path: ${{ github.workspace }} # location for the settings.xml file
        # - name: Setup Gradle
        #   uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

#    - name: Gradle clean cache
#      uses: burrunan/gradle-cache-action@v1
#      with:
#        job-id: jdk17
#        arguments: build
#        gradle-version: wrapper
#        properties: |
#          kotlin.js.compiler=ir
#          kotlin.parallel.tasks.in.project=true

    - name: Build with Gradle
      working-directory: ${{ github.workspace }}/appodeal-android-sdk
      run: ./gradlew :banner:assembleDebug

    - name: save debug build for aws
      uses: actions/upload-artifact@v4
      with:
        name: banner-debug.apk
        path: appodeal-android-sdk/banner/build/outputs/apk/debug/banner-debug.apk
        retention-days: 14


  tests:
    name: run ui tests on aws with appium
    needs: build
    runs-on: ${{ github.event.inputs.runner || 'autotestdebug' }}
    timeout-minutes: 30
    steps:
    - name: Print Env Variables
      run: env
      working-directory: ${{ github.workspace }}

    - name: checkout source code of application
      uses: actions/checkout@v4
      with:
        path: 'SDK-Auto-Test'
        clean: true
        repository: 'appodeal/SDK-Auto-Test'
        ref: 'aws'
        token: ${{ secrets.UITESTREPOACCESS }}

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: download debug build
      uses: actions/download-artifact@v4
      with:
        name: banner-debug.apk
        path: ./SDK-Auto-Test/apk

    - name: prepare build
      working-directory: ${{ github.workspace }}/SDK-Auto-Test
      run: |
        mvn clean
        sleep 5
        mvn jar:jar
        sleep 5
        mvn jar:test-jar
        sleep 5
        mvn assembly:single -DskipTests -Ddescriptor=src/main/assembly/zip.xml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
